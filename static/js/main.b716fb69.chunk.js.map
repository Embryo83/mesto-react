{"version":3,"sources":["components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Card","props","card","link","name","onClick","onCardClick","type","api","baseUrl","token","this","_baseUrl","_token","res","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","checkRes","body","JSON","stringify","id","about","url","avatar","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setInitialCards","useEffect","all","getInitialCards","getUserInfo","data","userId","_id","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","Footer","PopupWithForm","isOpen","onClose","title","action","noValidate","children","disabled","ImagePopup","state","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setIsImagePopupOpen","closeAllPopups","autoComplete","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b716fb69.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header () {\r\n  return (\r\n    <header className=\"header section\">         \r\n      <img className=\"logo\" src={logo} alt=\"логотип Место\" />    \r\n    </header> \r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <img\r\n        src={props.card.link}\r\n        className=\"element__item\"\r\n        alt={props.card.name}\r\n        onClick={handleClick}\r\n      />\r\n      <button type=\"button\" className=\"element__delete-button\"></button>\r\n      <div className=\"element__caption\">\r\n        <h2 className=\"element__title\">{props.card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button type=\"button\" className=\"element__like-button\"></button>\r\n          <span className=\"element__like-counter\">0</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;","export default class Api {\r\n  constructor({ baseUrl, token }) {\r\n    this._baseUrl = baseUrl;\r\n    this._token = token;\r\n  }\r\n\r\n  checkRes(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  addNewCard(name, link) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  addLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  editProfile(name, about) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then(this.checkRes);\r\n  }\r\n\r\n  editAvatar(url) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: url.link,\r\n      }),\r\n    }).then(this.checkRes);\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-15\",\r\n  token: \"f1c23b59-12ef-41ca-b659-2fe3930a6862\",\r\n});\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { api } from \"../utils/api\";\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = React.useState();\r\n  const [userDescription, setUserDescription] = React.useState();\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [cards, setInitialCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getInitialCards(), api.getUserInfo()])\r\n      .then(([cards, data]) => {\r\n        const userId = data._id;\r\n\r\n        setUserName(data.name);\r\n        setUserDescription(data.about);\r\n        setUserAvatar(data.avatar);\r\n        setInitialCards(cards);\r\n\r\n        return userId;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"page__content\">\r\n      <section className=\"profile section section_narrow\">\r\n        <div className=\"profile__content\">\r\n          <div className=\"profile__user\">\r\n            <img alt=\"Аватар\" src={userAvatar} className=\"profile__avatar\" />\r\n            <button\r\n              type=\"button\"\r\n              onClick={props.onEditAvatar}\r\n              className=\"profile__avatar-button\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__info-header\">\r\n              <h1 className=\"profile__title\">{userName}</h1>\r\n              <button\r\n                type=\"button\"\r\n                onClick={props.onEditProfile}\r\n                className=\"profile__edit-button\"\r\n              ></button>\r\n            </div>\r\n            <h2 className=\"profile__subtitle\">{userDescription}</h2>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={props.onAddPlace}\r\n            className=\"profile__add-button\"\r\n          ></button>\r\n        </div>\r\n      </section>\r\n      <section className=\"elements section section_narrow\">\r\n        <ul className=\"elements__list\">\r\n          {cards.map((card) => (\r\n            <Card card={card} key={card._id} onCardClick={props.onCardClick} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\"> \r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p> \r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <section\r\n      className={`popup popup_type_${props.name} ${\r\n        props.isOpen ? \"popup_is-open\" : \"\"\r\n      }`}\r\n      onClick={props.onClose}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        <form action=\"#\" name={props.name} className=\"popup__form\" noValidate>\r\n          {props.children}\r\n          <button type=\"submit\" className=\"popup__submit-button\" disabled>\r\n            Сохранить\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <section\r\n      className={`popup popup_type_photo ${\r\n        props.card.state ? \"popup_is-open\" : \"\"\r\n      }`}\r\n      onClick={props.onClose}\r\n    >\r\n      <figure className=\"popup__container_type_photo\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-button\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <img\r\n          src={props.card.src}\r\n          alt={props.card.name}\r\n          className=\"popup__photo\"\r\n        />\r\n        <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n      </figure>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setIsImagePopupOpen] = React.useState({});\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen({ state: true, src: card.link, name: card.name });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen({});\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__container\">\n        <Header />\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onEditAvatar={handleEditAvatarClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n      </div>\n      <PopupWithForm\n        title=\"Обновить аватар\"\n        name=\"avatar\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          autoComplete=\"off\"\n          id=\"avatar-input\"\n          type=\"url\"\n          name=\"link\"\n          placeholder=\"Ссылка на картинку\"\n          className=\"popup__input popup__input_type_ava\"\n          required\n        />\n        <span id=\"avatar-input-error\" className=\"popup__error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        title=\"Редактировать профиль\"\n        name=\"edit\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          autoComplete=\"off\"\n          id=\"name-input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder = \"Имя\"\n          className=\"popup__input popup__input_type_name\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          required\n        />\n        <span id=\"name-input-error\" className=\"popup__error\"></span>\n        <input\n          type=\"text\"\n          name=\"job\"\n          placeholder=\"О себе\"\n          className=\"popup__input popup__input_type_job\"\n          id=\"job-input\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          autoComplete=\"off\"\n          required\n        />\n        <span className=\"popup__error\" id=\"job-input-error\"></span>\n      </PopupWithForm>\n      <PopupWithForm\n        title=\"Новое место\"\n        name=\"add\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          type=\"text\"\n          name=\"place\"\n          placeholder=\"Название\"\n          className=\"popup__input popup__input_type_place\"\n          id=\"place-input\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          autoComplete=\"off\"\n          required\n        />\n\n        <span className=\"popup__error\" id=\"place-input-error\"></span>\n        <input\n          type=\"url\"\n          name=\"link\"\n          placeholder=\"Cсылка на картинку\"\n          className=\"popup__input popup__input_type_link\"\n          id=\"url-input\"\n          autoComplete=\"off\"\n          required\n        />\n        <span className=\"popup__error\" id=\"url-input-error\"></span>\n      </PopupWithForm>\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.94cbab21.svg\";"],"sourceRoot":""}